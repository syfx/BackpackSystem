-- 信息提示框上的Tooltip脚本（Tooltip类型）
local tooltip = nil
-- 拖拽时临时储存装备的格子上的DragUI脚本（DragUI类型）
local dragItem = nil
-- 背包面板上的PackPanel脚本（PackPanel类型）
local packPanel = nil
-- 添加装备按钮（Button类型）
local btnAddItem = nil
--当前使用的画布
local canvas

--是否正在显示Tooltip
local IsShowTooltip = false
--是否正在拖拽装备
local IsDrag = false

function start()
	print("lua start...")

	tooltip = objTooltip:GetComponent(typeof(CS.PackSystem.Tooltip))
	dragItem = objDragUI:GetComponent(typeof(CS.PackSystem.DragUI))
	packPanel = objPackPanel:GetComponent(typeof(CS.PackSystem.PackPanel))
	btnAddItem = objAddItem:GetComponent(typeof(CS.UnityEngine.UI.Button))
	canvas = CS.UnityEngine.GameObject.Find("Canvas")
	--注册鼠标进入格子事件
	CS.PackSystem.GridUI.OnEnter = GridUI_OnEnter
end

function update()
	position = CS.PackSystem.MyRectTransformUtility.ScreenPointToLocalPoint(canvas.transform, CS.UnityEngine.Input.mousePosition, nil)
	if (IsDrag)
	then
		--显示拖拽UI
		dragItem:ShowDrag()
		dragItem:SetPosition(position)
	elseif (IsShowTooltip)
	then
		--显示提示框
		tooltip:ShowToolTip()
		tooltip:SetPosition(position)
	end
end

--鼠标进入格子回调方法
function GridUI_OnEnter(transform)
	print("GridUI_OnEnter...")
	local item = CS.PackSystem.ItemModel.GetData(transform.name)
    if (item	~= nil)
	then
		print("执行成功！")
		local text = GetToolTipText(item)
		tooltip:UpdateToolTip(text)
		IsShowTooltip = true
	end
end

-- 获取装备的提示信息 (item: Item类型变量)
function GetToolTipText(item)
    if (item == nil)
	then
        return nil
	end
	--new一个StringBuilder对象
	local StringBuilder = CS.System.Text.StringBuilder
	local strDescribe = StringBuilder()

    strDescribe:AppendFormat("<color=red>{0}</color>\n\n", item.Name)

	if(item.Item_Type == CS.PackSystem.ItemType.Weapon)
	then
        if (item.Attack ~= 0)
		then
            strDescribe:AppendFormat("<color=white>攻击力：{0}</color>\n", item.Attack);
		end
        if (item.AttackSpeed ~= 0)
		then
            strDescribe:AppendFormat("<color=white>攻击速度：{0}</color>\n", item.AttackSpeed)
		end
	elseif( item.Item_Type == CS.PackSystem.ItemType.Armor )
	then
		 if (item.HP ~= 0)
		then
           strDescribe:AppendFormat("<color=white>生命值：{0}</color>\n", item.HP)
		end
        if (item.Power ~= 0)
		then
            strDescribe:AppendFormat("<color=white>防御力：{0}</color>\n", item.Power)
		end
    elseif( item.Item_Type == CS.PackSystem.ItemType.Consumable )
	then
		if (item.HP ~= 0)
		then
           strDescribe:AppendFormat("<color=blue>恢复HP：{0}</color>\n", item.Hp)
		end
        if (item.Mp ~= 0)
		then
            strDescribe:AppendFormat("<color=blue>恢复MP：{0}</color>\n", item.Mp)
		end
	else
		return nil
	end

    strDescribe:AppendFormat("\n");
    strDescribe:AppendFormat("<color=white>{0}</color>\n\n", item.Introduction)
    strDescribe:AppendFormat("<color=yellow>购买价格：{0}</color>\n", item.Buyprice)
    strDescribe:AppendFormat("<color=yellow>出售价格：{0}</color>", item.SellPrice)
	
    return strDescribe:ToString()
end
